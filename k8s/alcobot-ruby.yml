apiVersion: v1
kind: Service
metadata:
  labels:
    app: alcobot-ruby-app
  name: alcobot-ruby-app
  namespace: default
spec:
  ports:
  - name: 80-to-80-tcp
    port: 80
    protocol: TCP
    targetPort: 80
  - name: 443-to-80-tcp
    port: 443
    protocol: TCP
    targetPort: 80
  selector:
    app: alcobot-ruby
  sessionAffinity: None
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: alcobot-ruby
  name: alcobot-ruby
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: alcobot-ruby
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: alcobot-ruby
    spec:
      containers:
      - env:
        - name: TELEGRAM_BOT_API_TOKEN
          valueFrom:
            configMapKeyRef:
              key: TELEGRAM_BOT_API_TOKEN
              name: alcobot-ruby-config
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              key: REDIS_URL
              name: alcobot-ruby-config
        image: eu.gcr.io/alcobot/alcobot-ruby:latest
        imagePullPolicy: Always
        name: alcobot-ruby-latest
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      nodeSelector:
        pool_type: ruby
